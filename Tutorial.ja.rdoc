== SKIP Embedded Tutorial
== 事前にインストールしておくもの
- Rails 2.1.2
- rspec-1.2.2
- rspec-rails-1.2.2
- Cucumber-0.2.0

== また、以下のプラグインにも依存しています。skip_embeddedをインストールすると自動的にインストールされます。
- openskip-repim-0.1.6
- moro-open_id_authentication-1.0.0

== 新規アプリケーションの作り方
SKIP Embeddedプラグインを利用して、SKIPと連携するアプリケーションを生成します。

TODOリストを管理する、SKIP Taskというアプリケーションを例に説明します。

skip_embeddedをインストールすると、skip-genというコマンドが使えるようになります。これは、skip_embeddedを使ったSKIP連携アプリを生成するためのコマンドです。第一引数にはアプリケーション名を指定します。

 $ skip-gen skip-todo
 $ cd skip-todo

続いて通常のRailsアプリケーションを作る手順で、アプリケーション本体を実装します。いまはTodoリストを作っていますので、そのためのモデルを生成します。String型のカラムtitleと、ユーザへの参照user_idがあればよいでしょう。

 $ ruby script/generate rspec_scaffold todo title:string user_id:integer

その後、"/"へのアクセスした場合の遷移先を定義します。config/routes.rbに下記を追加します。

 map.root :controller => "todos"

マイグレーションを実行し、サーバを起動します。

 $ rake db:migrate
 $ ruby script/server -p 3001

http://localhost:3001/にアクセスすると、initial_settings.ymlの fixed_op -> fixed_openid_server_url で定義しているOPとの間で認証を開始します。認証に成功すると、ユーザサインアップ画面になります。

サインアップ後は、通常のRailsのscaffoldに遷移します。

== 見た目をカスタマイズする
skip_embeddedジェネレータは、SKIP風のレイアウトも生成します。Todoの登録画面でもこれを利用するには、コントローラごとのレイアウトを削除します。

 $ rm app/views/layouts/todos.html.erb

画面を再読込すると、SKIP風のレイアウトが適用されます。

== 全文検索連携
SKIPの全文検索と連携するためのキャッシュも簡単に生成できます

下記の内容で、rakeタスクを定義し、lib/tasks/skip_todos.rakeとして保存します。

 namespace "skip_todos" do
   desc "build fulltext search cache DIR=[cache_root] SINCE=[sec target updated]"
   task :fulltext_cache do
     require "skip_embedded/fulltext_search_cache"

     options = {}
     options[:cache_dir] = ENV["DIR"] unless ENV["DIR"].blank?
     options[:since] = ENV["SINCE"] unless ENV["SINCE"].blank?
     options[:url_prefix] = ENV["URL"] unless ENV["URL"].blank?

     SkipEmbedded::FulltextSearchCache.build({ Todo => TodoCacheBuilder}, options)
   end
 end

また、下記の内容でTodoCacheBuilderを定義し、lib/todo_cache_builder.rbに配置します。

 require "todo"
 require 'skip_embedded/fulltext_search_cache/builder_base'

 class TodoCacheBuilder < SkipEmbedded::FulltextSearchCache::BuilderBase
   self.entity_name = "todo"

   def title; ERB::Util.h(todo.title) ; end
   def body;  ERB::Util.h(todo.title) ; end

   def to_meta
     publicities = ["todo:#{todo.id}"]
     {
       :title => todo.title,
       :contents_type => "todo-todo",
       :publication_symbols => "todo:#{todo.id}",
       :link_url => url_for(:controller => "todos", :action => "show", :id => todo),
       :icon_url => icon_url("todo.gif")
     }
   end
 end

すると、全文検索連携用のキャッシュを生成できるようになります。

 $ rake skip_todos:fulltext DIR=path/to/dir


